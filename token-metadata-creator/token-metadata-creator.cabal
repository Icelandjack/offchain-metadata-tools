cabal-version:       2.2
name:                token-metadata-creator
version:             0.1.0.0
synopsis:            A library and CLI for manipulating data for the Metadata Server CIP
license:             Apache-2.0
copyright:           2020 Input Output (Hong Kong) Ltd.
author:              Obsidian Systems LLC
maintainer:          operations@iohk.io

flag development
    description: Disable `-Werror`
    default: False
    manual: True

library
  exposed-modules: Cardano.Metadata.Types
                 , Cardano.Metadata.GoguenRegistry
                 , Cardano.Metadata.Validation.Wallet
  other-modules: AesonHelpers
  build-depends: base
               , aeson
               , base16-bytestring
               , base64-bytestring
               , bytestring
               , text
               , unordered-containers
               , network-uri
               , cardano-prelude
               , cardano-crypto-class
               , cardano-api
               , cardano-crypto
               , JuicyPixels
               , cardano-ledger-shelley-ma
               , ouroboros-consensus-shelley
               , shelley-spec-ledger
               , cardano-slotting
               , containers
               , cborg
               , scientific
               , time
               , co-log
               , megaparsec
               , mtl
               , filepath
               , metadata-lib
               , validation
  hs-source-dirs: src
  default-language: Haskell2010
  default-extensions: NoImplicitPrelude
                      OverloadedStrings
  if (!flag(development))
    ghc-options: -Werror -Wall

executable token-metadata-creator
  main-is:             token-metadata-creator.hs
  build-depends:       base
                     , aeson
                     , aeson-pretty
                     , base64-bytestring
                     , bytestring
                     , cardano-prelude
                     , token-metadata-creator
                     , safe-exceptions
                     , co-log
                     , validation
                     , directory
                     , optparse-applicative
                     , megaparsec
                     , metadata-lib
                     , text
                     , cardano-api
                     , cardano-cli
                     , time
                     , cardano-slotting
  hs-source-dirs:      app
  default-language:    Haskell2010
  default-extensions: NoImplicitPrelude
                      OverloadedStrings
  if (!flag(development))
    ghc-options: -Werror -Wall
  other-modules:       Config

test-suite unit-tests
  hs-source-dirs:       test
  main-is:              Main.hs
  type:                 exitcode-stdio-1.0

  build-depends:  HUnit
                , QuickCheck
                , aeson
                , aeson-pretty
                , base >=4.12 && <5
                , base64-bytestring
                , bytestring
                , cardano-api
                , cardano-crypto-class
                , co-log
                , containers
                , filepath
                , hedgehog
                , hspec
                , hspec-wai
                , http-client
                , http-types
                , memory
                , metadata-lib
                , monad-logger
                , mtl
                , network-uri
                , raw-strings-qq
                , servant
                , servant-client
                , smallcheck
                , tasty
                , tasty-hedgehog
                , tasty-hspec
                , tasty-hunit
                , tasty-quickcheck
                , text
                , unordered-containers
                , validation
                , vector
                , wai-extra
                , warp
                , token-metadata-creator
                , lens
                , scientific
                , lens-aeson
                , aeson-qq
                , base16-bytestring

  other-modules:        Test.Cardano.Metadata.Validation.Wallet

  ghc-options:          -Wall
                        -Wincomplete-record-updates
                        -Wincomplete-uni-patterns
                        -Wincomplete-patterns
                        -Wredundant-constraints
                        -Wpartial-fields
                        -Wcompat